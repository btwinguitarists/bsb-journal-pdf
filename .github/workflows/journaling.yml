name: EPUB to Journaling PDF (links preserved)

on:
  workflow_dispatch:
    inputs:
      epub_url:
        description: "Direct URL to the EPUB (copy the EPUB link from Archive.org)"
        required: true
      right_margin_in:
        description: "Right journal margin (inches)"
        default: "3.0"
        required: true
      orientation:
        description: "portrait or landscape"
        default: "landscape"
        required: true
      paper_size:
        description: "letter or a4"
        default: "letter"
        required: true
      base_font_pt:
        description: "Base font size (points)"
        default: "11"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Calibre (ebook-convert)
        run: |
          sudo -v
          curl -L https://download.calibre-ebook.com/linux-installer.py | sudo -E python3 -

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Python deps
        run: pip install --quiet pymupdf

      - name: Download EPUB
        run: |
          mkdir -p work
          curl -L "${{ inputs.epub_url }}" -o work/book.epub
          python - << 'PY'
import zipfile, sys
try:
    zipfile.ZipFile("work/book.epub").testzip()
    print("EPUB looks valid.")
except Exception as e:
    print("ERROR: URL did not return a valid EPUB/ZIP:", e)
    sys.exit(1)
PY

      - name: Compute margins and paper
        id: cfg
        shell: bash
        run: |
          RIGHT_IN="${{ inputs.right_margin_in }}"
          ORIENT="${{ inputs.orientation }}"
          PAPER="${{ inputs.paper_size }}"
          MPT=$(python3 -c 'import sys; print(int(float(sys.argv[1])*72))' "$RIGHT_IN")
          # For landscape we put the journal space on the BOTTOM, then rotate pages,
          # so it becomes the RIGHT margin visually.
          if [ "$ORIENT" = "landscape" ]; then
            MR=54
            MB="$MPT"
            ROTATE="yes"
          else
            MR="$MPT"
            MB=54
            ROTATE="no"
          fi
          echo "margin_right_pt=$MR" >> "$GITHUB_OUTPUT"
          echo "margin_bottom_pt=$MB" >> "$GITHUB_OUTPUT"
          echo "paper=$PAPER" >> "$GITHUB_OUTPUT"
          echo "rotate=$ROTATE" >> "$GITHUB_OUTPUT"

      - name: Convert EPUB to base PDF (Calibre keeps anchors)
        run: |
          ebook-convert work/book.epub work/base.pdf \
            --paper-size "${{ steps.cfg.outputs.paper }}" \
            --margin-left 54 --margin-top 54 \
            --margin-right ${{ steps.cfg.outputs.margin_right_pt }} \
            --margin-bottom ${{ steps.cfg.outputs.margin_bottom_pt }} \
            --pdf-use-document-metadata \
            --embed-all-fonts \
            --pdf-add-toc \
            --base-font-size ${{ inputs.base_font_pt }}
          ls -lh work/base.pdf

      - name: Add journal divider and Home hotspot (and rotate if needed)
        env:
          ROTATE: ${{ steps.cfg.outputs.rotate }}
          RIGHT_IN: ${{ inputs.right_margin_in }}
        run: |
          python - << 'PY'
import fitz, os
in_pdf="work/base.pdf"
out_pdf="work/journaling.pdf"
right_in=float(os.getenv("RIGHT_IN","3.0"))
rotate=(os.getenv("ROTATE","no").lower()=="yes")
margin_pt=int(right_in*72)

doc=fitz.open(in_pdf)

# Rotate pages if requested (keeps links intact)
if rotate:
    for p in doc:
        if p.rect.height > p.rect.width:
            p.set_rotation(90)

# Draw divider at the inner edge of the journal space and add an invisible "Home" hotspot
for p in doc:
    r=p.rect
    x=r.x1 - margin_pt
    # Divider line
    p.draw_line(fitz.Point(x, r.y0+12), fitz.Point(x, r.y1-12), color=(0,0,0), width=0.5)
    # "Home" label and hotspot back to page 1 (index 0)
    p.insert_text(fitz.Point(r.x0+18, r.y0+22), "Home", fontsize=8, color=(0.3,0.3,0.3))
    p.insert_link({"kind": fitz.LINK_GOTO, "from": fitz.Rect(r.x0+12, r.y0+10, r.x0+75, r.y0+28), "page": 0})

doc.save(out_pdf)
print("Wrote", out_pdf)
PY
          ls -lh work/journaling.pdf

      - name: Upload finished PDF
        uses: actions/upload-artifact@v4
        with:
          name: journaling-pdf
          path: work/journaling.pdf
          if-no-files-found: error
